package Books;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Administrator
 */
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import Project.ConnectionProvider;
import javax.swing.JOptionPane;
public class BookDetails extends javax.swing.JFrame {

    /**
     * Creates new form BookDetails
     */
    public BookDetails() {
        initComponents();
        setSize(727, 490);
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        jLabel8.setText("jLabel8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocation(new java.awt.Point(325, 125));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Book name");
        jLabel1.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, -1, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, 130, 40));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 206, -1, -1));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(100, 61, 22));
        jButton1.setText("Read");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 280, 150, 40));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(100, 61, 22));
        jButton2.setText("Unread");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 280, 150, 40));

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(100, 61, 22));
        jButton3.setText("Add to wishlist");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, 150, 40));

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Update current page");
        jLabel3.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 120, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Favourite pages");
        jLabel4.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, -1, -1));
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 110, 130, 40));
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 180, 130, 40));

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(100, 61, 22));
        jButton4.setText("Add to favourites");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, 160, 40));

        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(100, 61, 22));
        jButton5.setText("Currently reading");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, 160, 40));

        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(100, 61, 22));
        jButton7.setText("Update");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 140, 110, 40));

        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(100, 61, 22));
        jButton6.setText("Close");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 370, 140, 50));
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 110, 40));
        getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 110, 40));

        jLabel6.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Update Author");
        jLabel6.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, -1, 30));

        jButton8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(100, 61, 22));
        jButton8.setText("Delete Book");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(567, 40, 120, 40));

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Update Genre");
        jLabel7.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon("C:\\Users\\Administrator\\Downloads\\download (11).jpg")); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, -70, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\Administrator\\Downloads\\download (11).jpg")); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -80, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
       String bookname = jTextField1.getText();
try {
    Connection con = ConnectionProvider.getCon();
    PreparedStatement pstmt = con.prepareStatement("SELECT * FROM book WHERE bookname =?");
    pstmt.setString(1, bookname);
    ResultSet rs = pstmt.executeQuery();
    
    if(rs.next()) {
        String wishlistStatus = rs.getString("wishlist");
        if(wishlistStatus != null && wishlistStatus.equals("yes")) {
            pstmt = con.prepareStatement("UPDATE book SET wishlist = NULL WHERE bookname =?");
            pstmt.setString(1, bookname);
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Successfully removed from wishlist ");
        } else {
            pstmt = con.prepareStatement("UPDATE book SET wishlist =? WHERE bookname =?");
            pstmt.setString(1, "yes");
            pstmt.setString(2, bookname);
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Successfully added to wishlist ");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Error: Book does not exist. Please enter a valid book name.");
    }
} 
catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Error adding/removing book from wishlist: " + e.getMessage());
}
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
      String bookname = jTextField1.getText();
try {
    Connection con = ConnectionProvider.getCon();
    PreparedStatement pstmt = con.prepareStatement("SELECT * FROM book WHERE bookname =?");
    pstmt.setString(1, bookname);
    ResultSet rs = pstmt.executeQuery();
    
    if(rs.next()) {
        String currReadStatus = rs.getString("currread");
        if(currReadStatus != null && currReadStatus.equals("yes")) {
            pstmt = con.prepareStatement("UPDATE book SET currread = NULL WHERE bookname =?");
            pstmt.setString(1, bookname);
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Successfully removed from current read list ");
        } else {
            pstmt = con.prepareStatement("UPDATE book SET currread =? WHERE bookname =?");
            pstmt.setString(1, "yes");
            pstmt.setString(2, bookname);
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Successfully added to current read list ");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Error: Book does not exist. Please enter a valid book name.");
    }
} 
catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Error adding/removing book from current read: " + e.getMessage());
}
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
       String bookname = jTextField1.getText();
       String currpage = jTextField2.getText();
       String favpage = jTextField3.getText();
       String genre=jTextField4.getText();
       String author=jTextField5.getText();
       

try {
    Connection con = ConnectionProvider.getCon();
    PreparedStatement pstmt = con.prepareStatement("SELECT * FROM book WHERE bookname =?");
    pstmt.setString(1, bookname);
    ResultSet rs = pstmt.executeQuery();
    
    if(rs.next()) {
        StringBuilder updateQuery = new StringBuilder("UPDATE book SET ");
        List<String> params = new ArrayList<>();
        
        if(!currpage.isEmpty()) {
            updateQuery.append("currpage =?, ");
            params.add(currpage);
        }
        if(!favpage.isEmpty()) {
            updateQuery.append("favpage = CONCAT(favpage, ?), "); // Use CONCAT to append the new value
            params.add(favpage);
        }
        if(!genre.isEmpty()) {
            updateQuery.append("genre =?, ");
            params.add(genre);
        }
        if(!author.isEmpty()) {
            updateQuery.append("author =?, ");
            params.add(author);
        }
        
        updateQuery.setLength(updateQuery.length() - 2); // remove trailing comma and space
        updateQuery.append(" WHERE bookname =?");
        params.add(bookname);
        
        pstmt = con.prepareStatement(updateQuery.toString());
        for(int i = 0; i < params.size(); i++) {
            pstmt.setString(i + 1, params.get(i));
        }
        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(null, "Successfully updated ");
        /*setVisible(false);
        new BookList().setVisible(true); */
    } else {
        JOptionPane.showMessageDialog(null, "Error: Book does not exist. Please enter a valid book name.");
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Error updating book: " + e.getMessage());
}

        
          
                     
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
     String bookname = jTextField1.getText();
try {
    Connection con = ConnectionProvider.getCon();
    PreparedStatement pstmt = con.prepareStatement("SELECT * FROM book WHERE bookname =?");
    pstmt.setString(1, bookname);
    ResultSet rs = pstmt.executeQuery();
    
    if(rs.next()) {
        String isReadStatus = rs.getString("isread");
        if(isReadStatus != null && isReadStatus.equals("yes")) {
            pstmt = con.prepareStatement("UPDATE book SET isread = NULL WHERE bookname =?");
            pstmt.setString(1, bookname);
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Successfully removed from read list ");
        } else {
            pstmt = con.prepareStatement("UPDATE book SET isread =? WHERE bookname =?");
            pstmt.setString(1, "yes");
            pstmt.setString(2, bookname);
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Successfully added to read list ");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Error: Book does not exist. Please enter a valid book name.");
    }
} 
catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Error adding/removing book from read: " + e.getMessage());
}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
          String bookname = jTextField1.getText();
try {
    Connection con = ConnectionProvider.getCon();
    PreparedStatement pstmt = con.prepareStatement("SELECT * FROM book WHERE bookname =?");
    pstmt.setString(1, bookname);
    ResultSet rs = pstmt.executeQuery();
    
    if(rs.next()) {
        String unreadStatus = rs.getString("unread");
        if(unreadStatus!= null && unreadStatus.equals("yes")) {
            pstmt = con.prepareStatement("UPDATE book SET unread = NULL WHERE bookname =?");
            pstmt.setString(1, bookname);
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Successfully removed from unread list ");
        } else {
            pstmt = con.prepareStatement("UPDATE book SET unread =? WHERE bookname =?");
            pstmt.setString(1, "yes");
            pstmt.setString(2, bookname);
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Successfully added to unread list ");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Error: Book does not exist. Please enter a valid book name.");
    }
} 
catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Error adding/removing book from unread: " + e.getMessage());
}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
   String bookname = jTextField1.getText();
try {
    Connection con = ConnectionProvider.getCon();
    PreparedStatement pstmt = con.prepareStatement("SELECT * FROM book WHERE bookname =?");
    pstmt.setString(1, bookname);
    ResultSet rs = pstmt.executeQuery();
    
    if(rs.next()) {
        String favStatus = rs.getString("fav");
        if(favStatus != null && favStatus.equals("yes")) {
            pstmt = con.prepareStatement("UPDATE book SET fav = NULL WHERE bookname =?");
            pstmt.setString(1, bookname);
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Successfully removed from favourite list ");
        } else {
            pstmt = con.prepareStatement("UPDATE book SET fav =? WHERE bookname =?");
            pstmt.setString(1, "yes");
            pstmt.setString(2, bookname);
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Successfully added to favourite list ");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Error: Book does not exist. Please enter a valid book name.");
    }
} 
catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Error adding/removing book from favourites: " + e.getMessage());
}
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new home().setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        String bookname = jTextField1.getText();
        try {
    Connection con = ConnectionProvider.getCon();
    PreparedStatement pstmt = con.prepareStatement("DELETE FROM book WHERE bookname = ? ");
    pstmt.setString(1, bookname);
    int rowsAffected = pstmt.executeUpdate();
    
    if(rowsAffected >0) {
        JOptionPane.showMessageDialog(null, "Book deleted successfully!");
    } else {
        JOptionPane.showMessageDialog(null, "Error: Book not found.");
    }
} catch (SQLException e) {
    System.out.println("Error: " + e.getMessage());
}
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
